#Importation des bases de données
library(haven)
library(tidyverse)
base_menage <- read_dta("C:/Users/Hp/Desktop/TEST_PRO_AUJOUR/Test - 20252502/data/base_menage.dta")
View(base_menage)
food_comp_child_baseline <- read_dta("C:/Users/Hp/Desktop/TEST_PRO_AUJOUR/Test - 20252502/data/food_comp_child_baseline.dta")
View(food_comp_child_baseline)
food_comp_child_endline <- read_dta("C:/Users/Hp/Desktop/TEST_PRO_AUJOUR/Test - 20252502/data/food_comp_child_endline.dta")
View(food_comp_child_endline)
food_comp_mother_baseline <- read_dta("C:/Users/Hp/Desktop/TEST_PRO_AUJOUR/Test - 20252502/data/food_comp_mother_baseline.dta")
View(food_comp_mother_baseline)
food_comp_mother_endline <- read_dta("C:/Users/Hp/Desktop/TEST_PRO_AUJOUR/Test - 20252502/data/food_comp_mother_endline.dta")
View(food_comp_mother_endline)
Data1<-food_child_baseline_clean%>%
select(energ_kcal)
View(Data1)
View(Data1)
Data1<-food_child_baseline_clean%>%
select(energ_kcal)
mean(Data1)
Data1<-food_child_baseline_clean%>%
select(energ_kcal)
is.na(Data1)
Data1<-food_child_baseline_clean%>%
select(energ_kcal)
as.numeric(Data1)
Data1<-food_child_baseline_clean%>%
select(energ_kcal)
Data2<-as.numeric(Data1)
Data1<-food_child_baseline_clean%>%
select(energ_kcal)
Data2<-as.numeric(Data1$energ_kcal)
mean(food_child_baseline_clean$energ_kcal)
Data1<-food_child_baseline_clean%>%
select(energ_kcal)
Data2<-as.numeric(Data1$energ_kcal)
mean(food_child_baseline_clean$energ_kcal)
#Vérification de la présence des données manquantes  et la correction des données manquantes si nécessaire
is.na(food_comp_mother_baseline)
#Correction des valeurs manquantes
# Suppression des lignes contenant des valeurs manquantes
food_mother_clean <- na.omit(food_comp_mother_baseline)
colnames(food_mother_clean)
#Vérification de la présence des données manquantes  et la correction des données manquantes si nécessaire
is.na(food_comp_mother_baseline)
#Correction des valeurs manquantes
# Suppression des lignes contenant des valeurs manquantes
food_mother_clean <- na.omit(food_comp_mother_baseline)
colnames(food_mother_clean)
#les noms des variables ne sont pas cohérents entre les bases de données Baseline et Endline
#Correction
# Renommer les colonnes dans Baseline
colnames(food_comp_mother_baseline)[colnames(food_comp_mother_baseline) == "energ_kcal"] <- "energ_kcal"
#les noms des variables ne sont pas cohérents entre les bases de données Baseline et Endline
#Correction
# Renommer les colonnes dans Baseline
colnames(food_comp_mother_baseline)[colnames(food_comp_mother_baseline) == "energ_kcal"] <- "energ_kcal"
colnames(food_comp_mother_baseline)
#les noms des variables ne sont pas cohérents entre les bases de données Baseline et Endline
#Correction
# Renommer les colonnes dans Baseline
colnames(food_comp_mother_baseline)[colnames(food_comp_mother_baseline) == "energ_kcal"] <- "energ_kcal"
colnames(food_comp_mother_baseline)
colnames(food_comp_mother_endline)
#les noms des variables ne sont pas cohérents entre les bases de données Baseline et Endline
#Correction
# Renommer les colonnes dans Baseline
colnames(food_comp_mother_baseline)[colnames(food_comp_mother_baseline) == "V1"] <- "energ_kcal"
#les noms des variables ne sont pas cohérents entre les bases de données Baseline et Endline
#Correction
# Renommer les colonnes dans Baseline
colnames(food_comp_mother_baseline)[colnames(food_comp_mother_baseline) == "V1"] <- "energ_kcal"
colnames(food_comp_mother_baseline)
#4.	 la consommation d’énergie moyenne à chaque repas pour l’ensemble des mères lors de l’enquête de base ?
mean(food_child_baseline_clean$energ_kcal)
mean(food_child_endlineline_clean$energ_kcal)
mean(food_her_endline_clean$energ_kcal)
mean(food_comp_mother_baseline$energ_kcal)
#Vérification de la présence des données manquantes  et la correction des données manquantes si nécessaire
is.na(food_comp_mother_baseline)
#Correction des valeurs manquantes
# Suppression des lignes contenant des valeurs manquantes
food_mother_clean <- na.omit(food_comp_mother_baseline)
# la consommation d’énergie moyenne à chaque repas pour l’ensemble des mères lors de l’enquête de base ?
mean(food_child_baseline_clean$energ_kcal)
mean(food_child_endlineline_clean$energ_kcal)
mean(food_her_endline_clean$energ_kcal)
mean(food_comp_mother_baseline$energ_kcal)
mean(food_comp_mother_baseline$energ_kcal)
food_mother_clean <- na.omit(food_comp_mother_baseline)
#Vérification de la présence des données manquantes  et la correction des données manquantes si nécessaire
is.na(food_comp_mother_baseline)
#Correction des valeurs manquantes
# Suppression des lignes contenant des valeurs manquantes
food_mother_clean <- na.omit(food_comp_mother_baseline)
#Vérification de la présence des données manquantes  et la correction des données manquantes si nécessaire
is.na(food_comp_mother_baseline)
#Correction des valeurs manquantes
# Suppression des lignes contenant des valeurs manquantes
food_mother_clean <- na.omit(food_comp_mother_baseline)
# la consommation d’énergie moyenne à chaque repas pour l’ensemble des mères lors de l’enquête de base ?
mean(food_child_baseline_clean$energ_kcal)
mean(food_child_endlineline_clean$energ_kcal)
mean(food_her_endline_clean$energ_kcal)
mean(food_mother_clean$energ_kcal)
# la consommation d’énergie moyenne à chaque repas pour l’ensemble des mères lors de l’enquête de base ?
mean(food_child_baseline_clean$energ_kcal)
mean(food_child_endlineline_clean$energ_kcal)
mean(food_her_endline_clean$energ_kcal)
mean(food_mother_clean$energ_kcal)
#	Après vérification et correction de chaque base de données
#i)	Sauvegarder les changements de la base food_comp_mother_baseline.dta en mother_baseline_v1.dta
mother_baseline_v1.dta<-food_mother_clean
#	Après vérification et correction de chaque base de données
#i)	Sauvegarder les changements de la base food_comp_mother_baseline.dta en mother_baseline_v1.dta
mother_baseline_v1.dta<-food_mother_clean
#ii)	Sauvegarder les changements de la base food_comp_mother_endline.dta en mother_endline_v1.dta
mother_endline_v1.dta<-food_her_endline_clean
#	Après vérification et correction de chaque base de données
#i)	Sauvegarder les changements de la base food_comp_mother_baseline.dta en mother_baseline_v1.dta
mother_baseline_v1.dta<-food_mother_clean
#ii)	Sauvegarder les changements de la base food_comp_mother_endline.dta en mother_endline_v1.dta
mother_endline_v1.dta<-food_her_endline_clean
#iii)	Sauvegarder les changements de la base food_comp_child_baseline.dta en child_baseline_v1.dta
child_baseline_v1.dta<-food_child_baseline_clean
#	Après vérification et correction de chaque base de données
#i)	Sauvegarder les changements de la base food_comp_mother_baseline.dta en mother_baseline_v1.dta
mother_baseline_v1.dta<-food_mother_clean
#ii)	Sauvegarder les changements de la base food_comp_mother_endline.dta en mother_endline_v1.dta
mother_endline_v1.dta<-food_her_endline_clean
#iii)	Sauvegarder les changements de la base food_comp_child_baseline.dta en child_baseline_v1.dta
child_baseline_v1.dta<-food_child_baseline_clean
#iv)	Sauvegarder les changements de la base food_comp_child_endline.dta en child_endline_v1.dta
child_endline_v1.dta<-food_child_endlineline_clean
#	Après vérification et correction de chaque base de données
#i)	Sauvegarder les changements de la base food_comp_mother_baseline.dta en mother_baseline_v1.dta
mother_baseline_v1.dta<-food_mother_clean
#ii)	Sauvegarder les changements de la base food_comp_mother_endline.dta en mother_endline_v1.dta
mother_endline_v1.dta<-food_her_endline_clean
#iii)	Sauvegarder les changements de la base food_comp_child_baseline.dta en child_baseline_v1.dta
child_baseline_v1.dta<-food_child_baseline_clean
#iv)	Sauvegarder les changements de la base food_comp_child_endline.dta en child_endline_v1.dta
child_endline_v1.dta<-food_child_endlineline_clean
#v)	Sauvegarder les changements de la base base_menage.dta en base_menage_final.dta
base_menage_final.dta<-base_men
#Partie 2 : Empilement et Fusion des données
#1	Baseline
Empile<-left_join(mother_baseline_v1.dta,child_endline_v1.dta)
#Partie 2 : Empilement et Fusion des données
#1	Baseline
Empile<-left_join(mother_baseline_v1.dta,child_endline_v1.dta)
colnames(mother_baseline_v1.dta)
#Partie 2 : Empilement et Fusion des données
#1	Baseline
Empile<-left_join(mother_baseline_v1.dta,child_endline_v1.dta)
colnames(mother_baseline_v1.dta)
colnames(child_endline_v1.dta)
#Partie 2 : Empilement et Fusion des données
#1	Baseline
left_join(mother_baseline_v1.dta,child_endline_v1.dta)
#Partie 2 : Empilement et Fusion des données
#1	Baseline
empile<-left_join(mother_baseline_v1.dta,child_endline_v1.dta)
#Partie 2 : Empilement et Fusion des données
#1	Baseline
left_join(mother_baseline_v1.dta,child_endline_v1.dta)
#Partie 2 : Empilement et Fusion des données
#1	Baseline
empile<-left_join(mother_baseline_v1.dta,child_endline_v1.dta)
#Partie 2 : Empilement et Fusion des données
#1	Baseline
empile<-left_join(mother_baseline_v1.dta,child_endline_v1.dta)
colnames(empile)
#ii)	Renommez toutes les variables de consommation energ_kcal jusqu’à vit_c_mcg en ajoutant le suffixe _b pour faire référence à l’enquête Baseline.
Nouveau<-empile%>%
select(energ_kcal)
View(Nouveau)
View(Nouveau)
#ii)	Renommez toutes les variables de consommation energ_kcal jusqu’à vit_c_mcg en ajoutant le suffixe _b pour faire référence à l’enquête Baseline.
Nouveau<-empile%>%
labelled::to_factor()%>%
select(energ_kcal)
View(Nouveau)
View(Nouveau)
#ii)	Renommez toutes les variables de consommation energ_kcal jusqu’à vit_c_mcg en ajoutant le suffixe _b pour faire référence à l’enquête Baseline.
Nouveau<-empile%>%
labelled::to_factor()%>%
select(energ_kcal)
#ii)	Renommez toutes les variables de consommation energ_kcal jusqu’à vit_c_mcg en ajoutant le suffixe _b pour faire référence à l’enquête Baseline.
colnames(empile)
#ii)	Renommez toutes les variables de consommation energ_kcal jusqu’à vit_c_mcg en ajoutant le suffixe _b pour faire référence à l’enquête Baseline.
# Renommer les colonnes de energ_kcal à vit_c_mcg en ajoutant le suffixe "_b"
empile <- empile %>%
rename_with(~ paste0(.x, "_b"),
.cols = energ_kcal:vit_c_mcg)
#ii)	Renommez toutes les variables de consommation energ_kcal jusqu’à vit_c_mcg en ajoutant le suffixe _b pour faire référence à l’enquête Baseline.
# Renommer les colonnes de energ_kcal à vit_c_mcg en ajoutant le suffixe "_b"
empile <- empile %>%
rename_with(~ paste0(.energ_kcal, "_b"),
.cols = energ_kcal:vit_c_mcg)
#Importation des bases de données
library(haven)
library(tidyverse)
base_menage <- read_dta("C:/Users/Hp/Desktop/TEST_PRO_AUJOUR/Test - 20252502/data/base_menage.dta")
View(base_menage)
food_comp_child_baseline <- read_dta("C:/Users/Hp/Desktop/TEST_PRO_AUJOUR/Test - 20252502/data/food_comp_child_baseline.dta")
View(food_comp_child_baseline)
food_comp_child_endline <- read_dta("C:/Users/Hp/Desktop/TEST_PRO_AUJOUR/Test - 20252502/data/food_comp_child_endline.dta")
View(food_comp_child_endline)
food_comp_mother_baseline <- read_dta("C:/Users/Hp/Desktop/TEST_PRO_AUJOUR/Test - 20252502/data/food_comp_mother_baseline.dta")
View(food_comp_mother_baseline)
food_comp_mother_endline <- read_dta("C:/Users/Hp/Desktop/TEST_PRO_AUJOUR/Test - 20252502/data/food_comp_mother_endline.dta")
View(food_comp_mother_endline)
#ii)	Renommez toutes les variables de consommation energ_kcal jusqu’à vit_c_mcg en ajoutant le suffixe _b pour faire référence à l’enquête Baseline.
# Renommer les colonnes de energ_kcal à vit_c_mcg en ajoutant le suffixe "_b"
empile <- empile %>%
rename_with(~ paste0(.x, "b"),
.cols = energ_kcal:vit_c_mcg)
#ii)	Renommez toutes les variables de consommation energ_kcal jusqu’à vit_c_mcg en ajoutant le suffixe _b pour faire référence à l’enquête Baseline.
# Renommer les colonnes de energ_kcal à vit_c_mcg en ajoutant le suffixe "_b"
empile %>%
rename_with(~ paste0(.x, "b"),
.cols = energ_kcal:vit_c_mcg)
colnames(empile)
#ii)	Renommez toutes les variables de consommation energ_kcal jusqu’à vit_c_mcg en ajoutant le suffixe _b pour faire référence à l’enquête Baseline.
# Renommer les colonnes de energ_kcal à vit_c_mcg en ajoutant le suffixe "_b"
empile1 <- empile %>%
rename_with(~ paste0(.x, "_b"),
.cols = energ_kcal:vit_c_mg)
colnames(empile)
View(empile1)
View(empile1)
#ii)	Renommez toutes les variables de consommation energ_kcal jusqu’à vit_c_mcg en ajoutant le suffixe _b pour faire référence à l’enquête Baseline.
# Renommer les colonnes de energ_kcal à vit_c_mcg en ajoutant le suffixe "_b"
Baseline <- empile %>%
rename_with(~ paste0(.x, "_b"),
.cols = energ_kcal:vit_c_mg)
View(Baseline)
View(Baseline)
View(Baseline)
View(Baseline)
#iv)	Sauvegardez la base de données finale contenant seulement les hhid s1_q2 energ_kcal   protein_g lipid_tot_g calcium_mg iron_mg zinc_mg sous le nom « baseline_final.dta ». Veuillez noter que pour cette base de données, pour chaque ménage, nous avons une ligne pour la mère et une ligne pour l’enfant.
baseline_final.dta<-Baseline%>%
select(hhid,s1_q2,protein_g_b,lipid_tot_g_b,calcium_mg_b,iron_mg_b)
View(baseline_final.dta)
View(baseline_final.dta)
#Endline
empile2<-left_join(mother_baseline_v1.dta,child_endline_v1.dta)
Renommez toutes les variables de consommation energ_kcal jusqu’à vit_c_mcg en ajoutant le suffixe _b pour faire référence à l’enquête Baseline.
Renommez toutes les variables de consommation energ_kcal jusqu’à vit_c_mcg en ajoutant le suffixe _b pour faire référence à l’enquête Baseline.
Renommez toutes les variables de consommation energ_kcal jusqu’à vit_c_mcg en ajoutant le suffixe _b pour faire référence à l’enquête Baseline.
colnames(empile2)
Renommez toutes les variables de consommation energ_kcal jusqu’à vit_c_mcg en ajoutant le suffixe _b pour faire référence à l’enquête Baseline.
Endline <- empile2 %>%
rename_with(~ paste0(.x, "_e"),
.cols = energ_kcal:vit_c_mg)
colnames(empile2)
#Renommez toutes les variables de consommation energ_kcal jusqu’à vit_c_mcg en ajoutant le suffixe _e pour faire référence à l’enquête Endline.
Endline <- empile2 %>%
rename_with(~ paste0(.x, "_e"),
.cols = energ_kcal:vit_c_mg)
colnames(empile2)
endline_final.dta <-Endline%>%
select(hhid,s1_q2,lipid_tot_g_e,calcium_mg_e,iron_mg_e,zinc_mg)
#3)	Fusion des données baseline_final.dta   et endline_final.dta.
left_join(baseline_final.dta,endline_final.dta)
#3)	Fusion des données baseline_final.dta   et endline_final.dta.
Fusion<-left_join(baseline_final.dta,endline_final.dta)
library(gtsummary)
#Partie 3 : Statistiques descriptives avec le package gtsummary
#Faites des statistiques descriptives intéressantes de vos choix en utilisant le package gtsummary.
Fusion%>%
labelled::to_factor()%>%
select(hhid,calcium_mg_e,protein_g_b)%>%
tbl_summary()
View(Fusion)
View(Fusion)
#Partie 3 : Statistiques descriptives avec le package gtsummary
#Faites des statistiques descriptives intéressantes de vos choix en utilisant le package gtsummary.
Fusion%>%
select(hhid,calcium_mg_e,protein_g_b)%>%
tbl_summary()
#Importation des bases de données
library(haven)
library(tidyverse)
library(gtsummary)
base_menage <- read_dta("C:/Users/Hp/Desktop/TEST_PRO_AUJOUR/Test - 20252502/data/base_menage.dta")
View(base_menage)
food_comp_child_baseline <- read_dta("C:/Users/Hp/Desktop/TEST_PRO_AUJOUR/Test - 20252502/data/food_comp_child_baseline.dta")
View(food_comp_child_baseline)
food_comp_child_endline <- read_dta("C:/Users/Hp/Desktop/TEST_PRO_AUJOUR/Test - 20252502/data/food_comp_child_endline.dta")
View(food_comp_child_endline)
food_comp_mother_baseline <- read_dta("C:/Users/Hp/Desktop/TEST_PRO_AUJOUR/Test - 20252502/data/food_comp_mother_baseline.dta")
View(food_comp_mother_baseline)
food_comp_mother_endline <- read_dta("C:/Users/Hp/Desktop/TEST_PRO_AUJOUR/Test - 20252502/data/food_comp_mother_endline.dta")
View(food_comp_mother_endline)
#1.	Vérification de la présence de doublons dans les bases de données Baseline, Endline et ménage. Puis la suppression des doublons si nécessaire.
sum(duplicated(base_menage))
sum(duplicated(food_comp_child_baseline))
sum(duplicated(food_comp_child_endline))
sum(duplicated(food_comp_mother_baseline))
sum(duplicated(food_comp_mother_endline))
#la suppression des doublons si nécessaire.
base_men<-unique(base_menage)
#les noms des variables sont cohérents entre les bases de données Baseline et Endline
colnames(food_comp_child_baseline)
colnames(food_comp_child_endline)
#les noms des variables ne sont pas cohérents entre les bases de données Baseline et Endline
#Correction
# Renommer les colonnes dans Baseline
colnames(food_comp_mother_baseline)[colnames(food_comp_mother_baseline) == "V1"] <- "energ_kcal"
#Vérification de la présence des données manquantes  et la correction des données manquantes si nécessaire
is.na(base_men)
#Vérification de la présence des données manquantes  et la correction des données manquantes si nécessaire
is.na(food_comp_child_baseline)
#Correction des valeurs manquantes
# Suppression des lignes contenant des valeurs manquantes
food_child_baseline_clean <- na.omit(food_comp_child_baseline)
#Vérification de la présence des données manquantes  et la correction des données manquantes si nécessaire
is.na(food_comp_child_endline)
#Correction des valeurs manquantes
# Suppression des lignes contenant des valeurs manquantes
food_endlineline_clean <- na.omit(food_comp_child_endline)
#Vérification de la présence des données manquantes  et la correction des données manquantes si nécessaire
is.na(food_comp_mother_baseline)
#Correction des valeurs manquantes
# Suppression des lignes contenant des valeurs manquantes
food_mother_clean <- na.omit(food_comp_mother_baseline)
#Vérification de la présence des données manquantes  et la correction des données manquantes si nécessaire
is.na(food_comp_mother_endline)
#Correction des valeurs manquantes
# Suppression des lignes contenant des valeurs manquantes
food_her_endline_clean <- na.omit(food_comp_mother_endline)
# la consommation d’énergie moyenne à chaque repas pour l’ensemble des mères lors de l’enquête de base ?
mean(food_child_baseline_clean$energ_kcal)
mean(food_child_endlineline_clean$energ_kcal)
mean(food_her_endline_clean$energ_kcal)
mean(food_mother_clean$energ_kcal)
#	Après vérification et correction de chaque base de données
#i)	Sauvegarder les changements de la base food_comp_mother_baseline.dta en mother_baseline_v1.dta
mother_baseline_v1.dta<-food_mother_clean
#ii)	Sauvegarder les changements de la base food_comp_mother_endline.dta en mother_endline_v1.dta
mother_endline_v1.dta<-food_her_endline_clean
#iii)	Sauvegarder les changements de la base food_comp_child_baseline.dta en child_baseline_v1.dta
child_baseline_v1.dta<-food_child_baseline_clean
#iv)	Sauvegarder les changements de la base food_comp_child_endline.dta en child_endline_v1.dta
child_endline_v1.dta<-food_child_endlineline_clean
#v)	Sauvegarder les changements de la base base_menage.dta en base_menage_final.dta
base_menage_final.dta<-base_men
#Partie 2 : Empilement et Fusion des données
#1	Baseline
empile<-left_join(mother_baseline_v1.dta,child_endline_v1.dta)
#ii)	Renommez toutes les variables de consommation energ_kcal jusqu’à vit_c_mcg en ajoutant le suffixe _b pour faire référence à l’enquête Baseline.
# Renommer les colonnes de energ_kcal à vit_c_mcg en ajoutant le suffixe "_b"
Baseline <- empile %>%
rename_with(~ paste0(.x, "_b"),
.cols = energ_kcal:vit_c_mg)
#iv)	Sauvegardez la base de données finale contenant seulement les hhid s1_q2 energ_kcal   protein_g lipid_tot_g calcium_mg iron_mg zinc_mg sous le nom « baseline_final.dta ». Veuillez noter que pour cette base de données, pour chaque ménage, nous avons une ligne pour la mère et une ligne pour l’enfant.
baseline_final.dta<-Baseline%>%
select(hhid,s1_q2,protein_g_b,lipid_tot_g_b,calcium_mg_b,iron_mg_b)
#Endline
empile2<-left_join(mother_baseline_v1.dta,child_endline_v1.dta)
#Renommez toutes les variables de consommation energ_kcal jusqu’à vit_c_mcg en ajoutant le suffixe _e pour faire référence à l’enquête Endline.
Endline <- empile2 %>%
rename_with(~ paste0(.x, "_e"),
.cols = energ_kcal:vit_c_mg)
colnames(empile2)
#iii)	Sauvegarder la base de données finale contenant seulement les hhid s1_q2 energ_kcal  protein_g lipid_tot_g calcium_mg iron_mg zinc_mg sous le nom « endline_final.dta ».
endline_final.dta <-Endline%>%
select(hhid,s1_q2,lipid_tot_g_e,calcium_mg_e,iron_mg_e,zinc_mg)
#Partie 3 : Statistiques descriptives avec le package gtsummary
#Faites des statistiques descriptives intéressantes de vos choix en utilisant le package gtsummary.
Fusion%>%
select(hhid,calcium_mg_e,protein_g_b)%>%
tbl_summary()
#Importation des bases de données
library(haven)
library(tidyverse)
library(gtsummary)
base_menage <- read_dta("C:/Users/Hp/Desktop/TEST_PRO_AUJOUR/Test - 20252502/data/base_menage.dta")
View(base_menage)
food_comp_child_baseline <- read_dta("C:/Users/Hp/Desktop/TEST_PRO_AUJOUR/Test - 20252502/data/food_comp_child_baseline.dta")
View(food_comp_child_baseline)
food_comp_child_endline <- read_dta("C:/Users/Hp/Desktop/TEST_PRO_AUJOUR/Test - 20252502/data/food_comp_child_endline.dta")
View(food_comp_child_endline)
food_comp_mother_baseline <- read_dta("C:/Users/Hp/Desktop/TEST_PRO_AUJOUR/Test - 20252502/data/food_comp_mother_baseline.dta")
View(food_comp_mother_baseline)
food_comp_mother_endline <- read_dta("C:/Users/Hp/Desktop/TEST_PRO_AUJOUR/Test - 20252502/data/food_comp_mother_endline.dta")
View(food_comp_mother_endline)
#1.	Vérification de la présence de doublons dans les bases de données Baseline, Endline et ménage. Puis la suppression des doublons si nécessaire.
sum(duplicated(base_menage))
sum(duplicated(food_comp_child_baseline))
sum(duplicated(food_comp_child_endline))
sum(duplicated(food_comp_mother_baseline))
sum(duplicated(food_comp_mother_endline))
#la suppression des doublons si nécessaire.
base_men<-unique(base_menage)
#les noms des variables sont cohérents entre les bases de données Baseline et Endline
colnames(food_comp_child_baseline)
colnames(food_comp_child_endline)
#les noms des variables ne sont pas cohérents entre les bases de données Baseline et Endline
#Correction
# Renommer les colonnes dans Baseline
colnames(food_comp_mother_baseline)[colnames(food_comp_mother_baseline) == "V1"] <- "energ_kcal"
#Vérification de la présence des données manquantes  et la correction des données manquantes si nécessaire
is.na(base_men)
#Vérification de la présence des données manquantes  et la correction des données manquantes si nécessaire
is.na(food_comp_child_baseline)
#Correction des valeurs manquantes
# Suppression des lignes contenant des valeurs manquantes
food_child_baseline_clean <- na.omit(food_comp_child_baseline)
#Vérification de la présence des données manquantes  et la correction des données manquantes si nécessaire
#Correction des valeurs manquantes
# Suppression des lignes contenant des valeurs manquantes
is.na(food_comp_child_endline)
food_endlineline_clean <- na.omit(food_comp_child_endline)
#Vérification de la présence des données manquantes  et la correction des données manquantes si nécessaire
#Correction des valeurs manquantes
# Suppression des lignes contenant des valeurs manquantes
is.na(food_comp_mother_baseline)
food_mother_clean <- na.omit(food_comp_mother_baseline)
#Vérification de la présence des données manquantes  et la correction des données manquantes si nécessaire
#Correction des valeurs manquantes
# Suppression des lignes contenant des valeurs manquantes
is.na(food_comp_mother_endline)
food_her_endline_clean <- na.omit(food_comp_mother_endline)
# la consommation d’énergie moyenne à chaque repas pour l’ensemble des mères lors de l’enquête de base ?
mean(food_child_baseline_clean$energ_kcal)
mean(food_child_endlineline_clean$energ_kcal)
mean(food_her_endline_clean$energ_kcal)
mean(food_mother_clean$energ_kcal)
#	Après vérification et correction de chaque base de données
#i)	Sauvegarder les changements de la base food_comp_mother_baseline.dta en mother_baseline_v1.dta
mother_baseline_v1.dta<-food_mother_clean
#ii)	Sauvegarder les changements de la base food_comp_mother_endline.dta en mother_endline_v1.dta
mother_endline_v1.dta<-food_her_endline_clean
#iii)	Sauvegarder les changements de la base food_comp_child_baseline.dta en child_baseline_v1.dta
child_baseline_v1.dta<-food_child_baseline_clean
#iv)	Sauvegarder les changements de la base food_comp_child_endline.dta en child_endline_v1.dta
child_endline_v1.dta<-food_child_endlineline_clean
#v)	Sauvegarder les changements de la base base_menage.dta en base_menage_final.dta
base_menage_final.dta<-base_men
#Partie 2 : Empilement et Fusion des données
#1	Baseline
empile<-left_join(mother_baseline_v1.dta,child_endline_v1.dta)
#ii)	Renommez toutes les variables de consommation energ_kcal jusqu’à vit_c_mcg en ajoutant le suffixe _b pour faire référence à l’enquête Baseline.
# Renommer les colonnes de energ_kcal à vit_c_mcg en ajoutant le suffixe "_b"
Baseline <- empile %>%
rename_with(~ paste0(.x, "_b"),
.cols = energ_kcal:vit_c_mg)
#iv)	Sauvegardez la base de données finale contenant seulement les hhid s1_q2 energ_kcal   protein_g lipid_tot_g calcium_mg iron_mg zinc_mg sous le nom « baseline_final.dta ». Veuillez noter que pour cette base de données, pour chaque ménage, nous avons une ligne pour la mère et une ligne pour l’enfant.
baseline_final.dta<-Baseline%>%
select(hhid,s1_q2,protein_g_b,lipid_tot_g_b,calcium_mg_b,iron_mg_b)
#Endline
empile2<-left_join(mother_baseline_v1.dta,child_endline_v1.dta)
#Renommez toutes les variables de consommation energ_kcal jusqu’à vit_c_mcg en ajoutant le suffixe _e pour faire référence à l’enquête Endline.
Endline <- empile2 %>%
rename_with(~ paste0(.x, "_e"),
.cols = energ_kcal:vit_c_mg)
colnames(empile2)
#iii)	Sauvegarder la base de données finale contenant seulement les hhid s1_q2 energ_kcal  protein_g lipid_tot_g calcium_mg iron_mg zinc_mg sous le nom « endline_final.dta ».
endline_final.dta <-Endline%>%
select(hhid,s1_q2,lipid_tot_g_e,calcium_mg_e,iron_mg_e,zinc_mg)
#3)	Fusion des données baseline_final.dta   et endline_final.dta.
Fusion<-left_join(baseline_final.dta,endline_final.dta)
#Partie 3 : Statistiques descriptives avec le package gtsummary
#Faites des statistiques descriptives intéressantes de vos choix en utilisant le package gtsummary.
Fusion%>%
select(hhid,calcium_mg_e,protein_g_b)%>%
tbl_summary()
#Vérification de la présence des données manquantes  et la correction des données manquantes si nécessaire
#Correction des valeurs manquantes
# Suppression des lignes contenant des valeurs manquantes
is.na(food_comp_child_endline)
food_endlineline_clean <- na.omit(food_comp_child_endline)
#Vérification de la présence des données manquantes  et la correction des données manquantes si nécessaire
#Correction des valeurs manquantes
# Suppression des lignes contenant des valeurs manquantes
is.na(food_comp_child_endline)
food_endline_clean <- na.omit(food_comp_child_endline)
#Vérification de la présence des données manquantes  et la correction des données manquantes si nécessaire
#Correction des valeurs manquantes
# Suppression des lignes contenant des valeurs manquantes
is.na(food_comp_child_endline)
food_endlineline_clean <- na.omit(food_comp_child_endline)
---
title: "TEST"
#Vérification de la présence des données manquantes  et la correction des données manquantes si nécessaire
#Correction des valeurs manquantes
# Suppression des lignes contenant des valeurs manquantes
is.na(food_comp_child_endline)
food_endlineline_clean <- na.omit(food_comp_child_endline)
#Vérification de la présence des données manquantes  et la correction des données manquantes si nécessaire
#Correction des valeurs manquantes
# Suppression des lignes contenant des valeurs manquantes
is.na(food_comp_child_endline)
food_endlineline_clean <- na.omit(food_comp_child_endline)
#Vérification de la présence des données manquantes  et la correction des données manquantes si nécessaire
#Correction des valeurs manquantes
# Suppression des lignes contenant des valeurs manquantes
is.na(food_comp_child_endline)
food_endlineline_clean<-na.omit(food_comp_child_endline)
#Vérification de la présence des données manquantes  et la correction des données manquantes si nécessaire
#Correction des valeurs manquantes
# Suppression des lignes contenant des valeurs manquantes
is.na(food_comp_child_endline)
food_endlineline_clean<-na.omit(food_comp_child_endline)
# Suppression des lignes contenant des valeurs manquantes
food_endlineline_clean<-na.omit(food_comp_child_endline)
# Suppression des lignes contenant des valeurs manquantes
food_endlineline_clean<-na.omit(food_comp_child_endline)
print(food_child_baseline_clean)
